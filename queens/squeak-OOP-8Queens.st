Object subclass: #Board	instanceVariableNames: 'lastQueen'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-8Queens'!!Board methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:45'!initializelastQueen := QueenTerminator new.(1 to: 8) do: [:i | lastQueen := (Queen newsetColumn:i neighbour: lastQueen)]! !!Board methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:45'!solvelastQueen firstSolutionifTrue: [Transcript show:lastQueen result printString; cr.[lastQueen nextSolution]whileTrue: [Transcript show:lastQueen result printString; cr].Transcript show: 'End of Solutions.'; cr]ifFalse: [Transcript show:'No Solution.'; cr]! !Object subclass: #Queen	instanceVariableNames: 'row column neighbour'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-8Queens'!!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:43'!advancerow=8ifTrue: [neighbour nextSolutionifFalse: [^false].row := 0].row := row +1.^true! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!canAttack:theRow x:theColumn|diff|diff := column - theColumn.(theRow=row or:[row + diff = theRow] or:[row - diff = theRow] )ifTrue: [^true].^neighbour canAttack:theRow x:theColumn! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!firstSolutionneighbour firstSolution.row := 1.^self moveToNextNonAttachedRow! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!initializecolumn := 0.! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!moveToNextNonAttachedRow[neighbour canAttack:row x:column]whileTrue: [self advance ifFalse: [^false]].^true! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!nextSolution^self advance and: [self moveToNextNonAttachedRow]! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!result^neighbour result addLast: row; yourself! !!Queen methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:44'!setColumn:aColumn neighbour:aQueencolumn := aColumn.neighbour := aQueen.! !Object subclass: #QueenTerminator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-8Queens'!!QueenTerminator methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:42'!canAttack:theRow x:theColumn^false! !!QueenTerminator methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:42'!firstSolution^true! !!QueenTerminator methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:42'!nextSolution^false! !!QueenTerminator methodsFor: 'as yet unclassified' stamp: 'IZ 2/28/2024 17:42'!result^OrderedCollection new! !